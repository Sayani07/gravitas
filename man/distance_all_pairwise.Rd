% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/distance_all_pairwise.R
\name{distance_all_pairwise}
\alias{distance_all_pairwise}
\title{computing all within and between facet distances between quantile categories given quantile data}
\usage{
distance_all_pairwise(
  sim_panel_quantiles,
  quantile_prob = seq(0.01, 0.99, 0.01),
  dist_ordered = TRUE,
  lambda = 0.67
)
}
\arguments{
\item{sim_panel_quantiles}{quantile data}

\item{quantile_prob}{numeric vector of probabilities with value #'in [0,1]  whose sample quantiles are wanted. Default is set to #' "decile" plot}

\item{dist_ordered}{if categories are ordered}

\item{lambda}{value of tuning parameter for computing weighted pairwise distances}
}
\value{
within and between facet distances
}
\description{
computing all within and between facet distances between quantile categories given quantile data
}
\examples{
library(tidyverse)
library(gravitas)
library(parallel)
library(ggplot2)
library(distributional)
sim_panel_data <- sim_panel(
  nx = 2,
  nfacet = 3,
  ntimes = 5,
  sim_dist = distributional
  ::dist_normal(5, 10)
) \%>\%
  unnest(c(data))
sim_panel_quantiles <-
  compute_quantiles(sim_panel_data
  )

distance_all_pairwise(sim_panel_quantiles, lambda = 0.5)
dist_data <- distance_all_pairwise(sim_panel_quantiles, lambda = 0.7)
# Plot raw distances
ggplot(dist_data, aes(x = 1:9, y = value, colour = dist_type)) +
  geom_line() +
  geom_point()
# Plot transformed distances
ggplot(dist_data, aes(
  x = 1:9, y = trans_value, colour =
    dist_type
)) +
  geom_line() +
  geom_point()
}
\author{
Sayani07
}
